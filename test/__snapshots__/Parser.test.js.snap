// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parser exponentiation parses exponentiation operators 1`] = `
Binary {
  "left": Literal {
    "value": 2,
  },
  "right": Literal {
    "value": 3,
  },
  "token": Object {
    "kind": 6,
    "line": 1,
    "literal": undefined,
  },
}
`;

exports[`parser exponentiation parses repeated exponentiation as left-associative 1`] = `
Binary {
  "left": Binary {
    "left": Literal {
      "value": 2,
    },
    "right": Literal {
      "value": 3,
    },
    "token": Object {
      "kind": 6,
      "line": 1,
      "literal": undefined,
    },
  },
  "right": Literal {
    "value": 4,
  },
  "token": Object {
    "kind": 6,
    "line": 1,
    "literal": undefined,
  },
}
`;

exports[`parser primary expressions parses expressions in parentheses 1`] = `
Binary {
  "left": Literal {
    "value": 1,
  },
  "right": Grouping {
    "expression": Binary {
      "left": Literal {
        "value": 2,
      },
      "right": Literal {
        "value": 3,
      },
      "token": Object {
        "kind": 9,
        "line": 1,
        "literal": undefined,
      },
    },
  },
  "token": Object {
    "kind": 8,
    "line": 1,
    "literal": undefined,
  },
}
`;

exports[`parser unary expressions parses consecutive unary '-' 1`] = `
Unary {
  "operator": Object {
    "kind": 7,
    "line": 1,
    "literal": undefined,
  },
  "right": Unary {
    "operator": Object {
      "kind": 7,
      "line": 1,
      "literal": undefined,
    },
    "right": Unary {
      "operator": Object {
        "kind": 7,
        "line": 1,
        "literal": undefined,
      },
      "right": Unary {
        "operator": Object {
          "kind": 7,
          "line": 1,
          "literal": undefined,
        },
        "right": Unary {
          "operator": Object {
            "kind": 7,
            "line": 1,
            "literal": undefined,
          },
          "right": Literal {
            "value": 5,
          },
        },
      },
    },
  },
}
`;

exports[`parser unary expressions parses consecutive unary 'not' 1`] = `
Unary {
  "operator": Object {
    "kind": 58,
    "line": 1,
    "literal": undefined,
  },
  "right": Unary {
    "operator": Object {
      "kind": 58,
      "line": 1,
      "literal": undefined,
    },
    "right": Unary {
      "operator": Object {
        "kind": 58,
        "line": 1,
        "literal": undefined,
      },
      "right": Unary {
        "operator": Object {
          "kind": 58,
          "line": 1,
          "literal": undefined,
        },
        "right": Unary {
          "operator": Object {
            "kind": 58,
            "line": 1,
            "literal": undefined,
          },
          "right": Literal {
            "value": true,
          },
        },
      },
    },
  },
}
`;

exports[`parser unary expressions parses unary '-' 1`] = `
Unary {
  "operator": Object {
    "kind": 7,
    "line": 1,
    "literal": undefined,
  },
  "right": Literal {
    "value": 5,
  },
}
`;

exports[`parser unary expressions parses unary 'not' 1`] = `
Unary {
  "operator": Object {
    "kind": 58,
    "line": 1,
    "literal": undefined,
  },
  "right": Literal {
    "value": true,
  },
}
`;
